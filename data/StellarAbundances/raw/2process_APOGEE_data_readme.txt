The 2process_APOGEE_data.hdf5 contains stellar abundances from the APOGEE catalog. 
Sit et al. (2024) derived empirical calibration offsets to remove systematic errors in the
surface gravity log(g). They compare the APOGEE stellar abundances derived by ASPCAP versus
the abundances derived by BACCHUS. ASPCAP and BACCHUS are different algorithms that fit the 
stellar spectra. 

- ASPCAP uses FERRE (Allende Prieto et al. 2006) to fit APOGEE spectra to a grid of synthetic 
spectra (M ́esza ́ros et al. 2012; Zamora et al. 2015) generated with Synspec (Hubeny & Lanz 2011)
from MARCS model atmospheres (Gustafs- son et al. 2008) and an H-band line list (Shetrone et al. 
2015; Hasselquist et al. 2016; Cunha et al. 2017; Smith et al. 2021), with NLTE calculations used 
for Na, Mg, K, and Ca (Osorio et al. 2020). ASPCAP uses a two-step fitting process: stellar 
atmospheric parameters are first determined with the full APOGEE spectrum, and then these 
parameters are held constant while individual abundances are fit for in smaller wavelength 
windows (Garc ́ıa P ́erez et al. 2016).

- The BACCHUS Analysis of Weak Lines in APOGEE Spectra (BAWLAS) catalog (Hayes et al. 2022) 
provides abundance measurements of elements with faint or blended lines (Na, P, S, V, Cu, Ce, and Nd)
for a sample of 126,362 high signal-to-noise (S/N>150) spectra of APOGEE red giants using the 
Brussels Automatic Code for Characterizing High accUracy Spectra (BACCHUS; Masseron et al. 2016).
It also reports C, N, and O abundances re-derived during the BACCHUS fitting process (for more details, 
see Section 4.5.1 of Hayes et al. 2022).

To create the 2process_APOGEE_data.hdf5 file included in this repository. The following steps were followed:

======ss

(1) Reading AstroNN data:

input_filename = "apogee_astroNN-DR17.fits"
astroNN = fits.open(input_filename)
astroNN_dataset = astroNN[1].data
astroNN.close()

GalR = astroNN_dataset['galr']
GalR_err = astroNN_dataset['galr_err']
GalZ_err = astroNN_dataset['galz_err']

mask = np.where((GalR_err<1) & (GalZ_err<1))[0]
nonan = np.where(np.isnan(GalR[mask]) == False)[0]
nonan = mask[nonan]

GalR = GalR[nonan]
Galz = astroNN_dataset['galz'][nonan]
Galphi = astroNN_dataset['galphi'][nonan]
APOGEE_ID_astroNN = astroNN_dataset['APOGEE_ID'][nonan]

=========

(2) Reading 2process-APOGEE data:

apogee = fits.open('2process_residual_abund_catalog_final.fits')
apogee_dataset = apogee[1].data
apogee.close()
output_directory = "../"

APOGEE_ID_Sit2024 = apogee_dataset['APOGEE_ID']
O_H_corr = apogee_dataset['O_H_ASPCAP_ADJ']
O_H_raw = apogee_dataset['O_H_ASPCAP_RAW']

SI_H_corr = apogee_dataset['SI_H_ASPCAP_ADJ']
SI_H_raw = apogee_dataset['SI_H_ASPCAP_RAW']

MG_H_corr = apogee_dataset['MG_H_ASPCAP_ADJ']
MG_H_raw = apogee_dataset['MG_H_ASPCAP_RAW']

FE_H_corr = apogee_dataset['FE_H_ASPCAP_ADJ']
FE_H_raw = apogee_dataset['FE_H_ASPCAP_RAW']

CN_H_corr = apogee_dataset['C+N_H_ASPCAP_ADJ']
CN_H_raw = apogee_dataset['C+N_H_ASPCAP_RAW']

O_H_bawlas_corr = apogee_dataset['O_H_BAWLAS_ADJ']
O_H_bawlas_raw = apogee_dataset['O_H_BAWLAS_RAW']

CN_H_bawlas_corr = apogee_dataset['C+N_H_BAWLAS_ADJ']
CN_H_bawlas_raw = apogee_dataset['C+N_H_BAWLAS_RAW']

======

(3) Cross-match of catalogs using the stars IDs!

_, indx_APOGEE_in_Sit2024, indx_astroNN_in_APOGEE = np.intersect1d(APOGEE_ID_Sit2024, APOGEE_ID_astroNN, assume_unique=False, return_indices=True,)

GalR = GalR[indx_astroNN_in_APOGEE]
Galz = Galz[indx_astroNN_in_APOGEE]
Galphi = Galphi[indx_astroNN_in_APOGEE]

APOGEE_ID_Sit2024 = APOGEE_ID_Sit2024[indx_APOGEE_in_Sit2024]
O_H_corr = O_H_corr[indx_APOGEE_in_Sit2024]
O_H_raw = O_H_raw[indx_APOGEE_in_Sit2024]
SI_H_corr = SI_H_corr[indx_APOGEE_in_Sit2024]
...

======

(4) Outputting..

# Meta-data
description = "APOGEE chemical abundances taken from the two process residual abundance catalog (https://zenodo.org/records/10659205) "
description += "by Sit et al. (2024) (https://ui.adsabs.harvard.edu/abs/2024arXiv240308067S/abstract). "
description += "The corrected APOGEE data from Sit et al. (2024) has been cross-matched with AstroNN galactocentric distances (https://data.sdss.org/datamodel/files/APOGEE_ASTRONN/apogee_astronn.html). "
description += "For more information visit ASPCAP documentation (https://www.sdss.org/dr14/irspec/aspcap/)."

citation = "Holtzman, J. A. et al. (2018); Leung, H.W. & Bovy, Jo (2019b); Sit, T., et al. (2024)"
bibcode = "2018AJ....156..125H; 2019MNRAS.483.3255L; eprint arXiv:2403.08067"

contact = "Data file generated by Camila Correa (CEA Paris-Saclay). Email: camila.correa@cea.fr,"
contact += " website: camilacorrea.com"

details = "Details regarding the generation of this table. From APOGEE the 2process_residual_abund_catalog_final.fits is read. For the "
details += "AstroNN added-value catalogs, the apogee_astroNN-DR17.fits file is read and nonan data is selected. "
details += "The Galactocentric positions (R [kpc], z [kpc], phi [rad]) were calculated in astroNN assuming that "
details += "the distance R0 to the Galactic center is 8.125 kpc (Gravity collaboration et al. 2018), the Sun is located 20.8 pc above "
details += "the Galactic midplane (Bennett & Bovy 2019)."

## Output in file
output_file = "2process_APOGEE_data.hdf5"

## Output in file
with h5py.File(output_file, 'w') as data_file:

    Header = data_file.create_group('Header')
    Header.attrs["Description"] = np.string_(description)
    Header.attrs["Further Details"] = np.string_(details)
    Header.attrs["Citation"] = np.string_(citation)
    Header.attrs["Bibcode"] = np.string_(bibcode)
    Header.attrs["Contact"] = np.string_(contact)

    dataset = data_file.create_dataset('O_H_ASPCAP_corrected', data=O_H_corr)
    dataset = data_file.create_dataset('O_H_ASPCAP_raw', data=O_H_raw)
    dataset = data_file.create_dataset('O_H_BAWLAS_corrected', data=O_H_bawlas_corr)
    dataset = data_file.create_dataset('O_H_BAWLAS_raw', data=O_H_bawlas_raw)

    dataset = data_file.create_dataset('SI_H_ASPCAP_corrected', data=SI_H_corr)
    dataset = data_file.create_dataset('SI_H_ASPCAP_raw', data=SI_H_raw)

    dataset = data_file.create_dataset('MG_H_ASPCAP_corrected', data=MG_H_corr)
    dataset = data_file.create_dataset('MG_H_ASPCAP_raw', data=MG_H_raw)

    dataset = data_file.create_dataset('CN_H_ASPCAP_corrected', data=CN_H_corr)
    dataset.attrs["Description"] = np.string_("(C+N)/H.")
    dataset = data_file.create_dataset('CN_H_ASPCAP_raw', data=CN_H_raw)
    dataset.attrs["Description"] = np.string_("(C+N)/H.")
    dataset = data_file.create_dataset('CN_H_BAWLAS_corrected', data=CN_H_bawlas_corr)
    dataset.attrs["Description"] = np.string_("(C+N)/H.")
    dataset = data_file.create_dataset('CN_H_BAWLAS_raw', data=CN_H_bawlas_raw)
    dataset.attrs["Description"] = np.string_("(C+N)/H.")

    dataset = data_file.create_dataset('GalR', data=GalR)
    dataset.attrs["Description"] = np.string_("Units kpc.")

    data_file.create_dataset('Galz', data=Galz)
    dataset.attrs["Description"] = np.string_("Units kpc.")
    data_file.create_dataset('Galphi', data=Galphi)

    data_file.create_dataset('APOGEE_ID', data=APOGEE_ID_Sit2024.encode("ascii"))


